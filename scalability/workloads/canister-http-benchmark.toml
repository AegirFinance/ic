title = "Measures how many Canister HTTP calls can happen on a given subnet"
description = "Continuously raise workload to proxy_canister alongside workload to counter_canister."

[[workload]]
canister = "proxy_canister#1"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "send_request"
method = "update"
raw_payload="4449444c056c02cfbe93a404018daacd9408786c06efd6e4027196aa9d6771a2f5ed880471abd5bc96067fc6a4a1980602f8db85fb08046d036c02f1fee18d0371cbe4fdc704716b01f6b8d8017f01001768747470733a2f2f7777772e6578616d706c652e636f6d097472616e73666f726d00010364656603616263000088526a74000000"

[[workload]]
canister = "proxy_canister#2"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "send_request"
method = "update"
raw_payload="4449444c056c02cfbe93a404018daacd9408786c06efd6e4027196aa9d6771a2f5ed880471abd5bc96067fc6a4a1980602f8db85fb08046d036c02f1fee18d0371cbe4fdc704716b01f6b8d8017f01001768747470733a2f2f7777772e6578616d706c652e636f6d097472616e73666f726d00010364656603616263000088526a74000000"


[[workload]]
canister = "proxy_canister#3"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "send_request"
method = "update"
raw_payload="4449444c056c02cfbe93a404018daacd9408786c06efd6e4027196aa9d6771a2f5ed880471abd5bc96067fc6a4a1980602f8db85fb08046d036c02f1fee18d0371cbe4fdc704716b01f6b8d8017f01001768747470733a2f2f7777772e6578616d706c652e636f6d097472616e73666f726d00010364656603616263000088526a74000000"

[[workload]]
canister = "proxy_canister#4"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "send_request"
method = "update"
raw_payload="4449444c056c02cfbe93a404018daacd9408786c06efd6e4027196aa9d6771a2f5ed880471abd5bc96067fc6a4a1980602f8db85fb08046d036c02f1fee18d0371cbe4fdc704716b01f6b8d8017f01001768747470733a2f2f7777772e6578616d706c652e636f6d097472616e73666f726d00010364656603616263000088526a74000000"

[[workload]]
canister = "proxy_canister#5"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "check_response"
method = "query"
raw_payload="4449444c0001711768747470733a2f2f7777772e6578616d706c652e6f7267"

[[workload]]
canister = "proxy_canister#6"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "check_response"
method = "query"
raw_payload="4449444c0001711768747470733a2f2f7777772e6578616d706c652e6f7267"

[[workload]]
canister = "proxy_canister#7"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "check_response"
method = "query"
raw_payload="4449444c0001711768747470733a2f2f7777772e6578616d706c652e6f7267"

[[workload]]
canister = "proxy_canister#8"
start_delay = 30
duration = 270
rps_ratio = 0.1
call_method = "check_response"
method = "query"
raw_payload="4449444c0001711768747470733a2f2f7777772e6578616d706c652e6f7267"

[[workload]]
canister = "counter"
duration = 300
rps_ratio = 0.1

[[workload]]
canister = "counter#2"
duration = 300
rps_ratio = 0.1

# Payload for send_request call
# '(
#     record {
#         cycles=500000000000:nat64;
#         request=record{
#             url="https://www.example.com";
#             max_response_byte=null;
#             headers=vec{ record { name="abc"; value="def" } };
#             body="";
#             http_method=variant { GET };
#             transform_method_name="transform"
#         }
#     }
# )'

# Payload for check_response call
# '( "https://www.example.com" )'
