{% let build_script_extra -%}

load("@rules_rust//rust:defs.bzl", "{{ build_type }}", "rust_binary", "rust_test", "rust_test_suite")

{%- if build_script %}
load("@rules_rust//cargo:cargo_build_script.bzl", "cargo_build_script")
{% let build_script_extra = " + [\":build_script\"]" -%}
{% else -%}
{% let build_script_extra = "" -%}
{% endif %}

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "sources",
    srcs = glob(
        ["**"],
    ) + ["//%s/%s:sources" % (
        package_name(),
        p,
    ) for p in subpackages(
        include = ["**"],
        allow_empty = True,
    )],
    visibility = ["//visibility:public"],
)

DEPENDENCIES = {{ deps|json }}

MACRO_DEPENDENCIES = {{ macro_deps|json }}

{% if build_script %}
BUILD_DEPENDENCIES = {{ build_deps|json }}
{% endif %}

{% if gen_tests -%}
DEV_DEPENDENCIES = {{ dev_deps|json }}

MACRO_DEV_DEPENDENCIES = {{ macro_dev_deps|json }}

{% endif -%}

ALIASES = {{ aliases|json }}

{% if build_script %}
cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    edition = "2018",
    deps = BUILD_DEPENDENCIES,
    aliases = ALIASES,
    data = [], # build script data (e.g. template files) goes here
)
{% endif %}

{{ build_type }}(
    name = "{{ target_name }}",
    srcs = glob(["src/**"]),
    crate_name = "{{ crate_name }}",
    edition = "{{ edition }}",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES{{ build_script_extra }},
    aliases = ALIASES
)

{% for bin in bins -%}
rust_binary(
    name = "{{ bin.name }}",
    srcs = ["{{ bin.path }}"],
    edition = "{{ edition }}",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":{{ target_name }}"]{{ build_script_extra }},
    aliases = ALIASES
)
{% endfor %}

{% if gen_tests -%}
rust_test(
    name = "{{ target_name }}_test",
    edition = "{{ edition }}",
    crate = ":{{ target_name }}",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES{{ build_script_extra }},
    aliases = ALIASES
)

{% if has_testsuite -%}
rust_test_suite(
    name = "{{ target_name }}_integration_tests",
    edition = "{{ edition }}",
    srcs = glob(["tests/**/*.rs"]),
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = [":{{ target_name }}"] + DEPENDENCIES + DEV_DEPENDENCIES{{ build_script_extra }},
    aliases = ALIASES
)
{%- endif %}
{%- endif %}
