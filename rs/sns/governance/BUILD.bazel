load("@rules_rust//rust:defs.bzl", "rust_library")
load("@rules_rust//cargo:cargo_build_script.bzl", "cargo_build_script")
load("//bazel:canisters.bzl", "rust_canister")
load("//bazel:prost.bzl", "generated_files_check")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "sources",
    srcs = glob(
        ["**"],
    ) + ["//%s/%s:sources" % (
        package_name(),
        p,
    ) for p in subpackages(
        include = ["**"],
        allow_empty = True,
    )],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "protos",
    srcs = glob(["proto/**"]),
)

DEPENDENCIES = [
    "//rs/crypto/sha",
    "//rs/monitoring/metrics_encoder",
    "//rs/nervous_system/common",
    "//rs/nervous_system/root",
    "//rs/protobuf",
    "//rs/registry/canister",
    "//rs/rosetta-api/icrc1",
    "//rs/rosetta-api/icrc1/client",
    "//rs/rosetta-api/ledger_canister",
    "//rs/rosetta-api/ledger_core",
    "//rs/rust_canisters/dfn_candid",
    "//rs/rust_canisters/dfn_core",
    "//rs/rust_canisters/dfn_http_metrics",
    "//rs/rust_canisters/dfn_protobuf",
    "//rs/rust_canisters/on_wire",
    "//rs/types/base_types",
    "//rs/types/ic00_types",
    "@crate_index//:build-info",
    "@crate_index//:bytes",
    "@crate_index//:candid",
    "@crate_index//:clap",
    "@crate_index//:comparable",
    "@crate_index//:hex",
    "@crate_index//:lazy_static",
    "@crate_index//:maplit",
    "@crate_index//:num",
    "@crate_index//:prost",
    "@crate_index//:rand_0_8_4",
    "@crate_index//:serde",
    "@crate_index//:strum",
]

MACRO_DEPENDENCIES = [
    "//rs/nervous_system/common/build_metadata",
    "@crate_index//:async-trait",
    "@crate_index//:strum_macros",
]

BUILD_DEPENDENCIES = [
    "//rs/types/base_types",
    "@crate_index//:build-info-build",
    "@crate_index//:prost-build",
]

ALIASES = {}

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    aliases = ALIASES,
    data = [],  # build script data (e.g. template files) goes here
    edition = "2018",
    version = "0.8.0",
    deps = BUILD_DEPENDENCIES,
)

rust_library(
    name = "governance",
    srcs = glob([
        "src/**",
        "gen/**",
    ]),
    aliases = ALIASES,
    crate_name = "ic_sns_governance",
    edition = "2018",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":build_script"],
)

rust_canister(
    name = "sns-governance-canister",
    srcs = ["canister/canister.rs"],
    aliases = ALIASES,
    compile_data = ["canister/governance.did"],
    edition = "2018",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":governance"] + [":build_script"],
)

generated_files_check(
    name = "check_generated_files",
    srcs = ["tests/check_generated_files.rs"],
    data = glob(["gen/**"]) + [
        ":protos",
        "//rs/types/base_types:protos",
        "//rs/rosetta-api/ledger_canister:protos",
    ],
    manifest_dir = "rs/sns/governance",
    deps = [
        "//rs/sns/governance/protobuf_generator:lib",
        "//rs/test_utilities/compare_dirs",
        "@crate_index//:tempfile",
    ],
)
