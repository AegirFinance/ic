gen-cargo-pipeline:
  extends:
    - .ubuntu-nix-docker
    - .cargo-rules-autorun-on-trigger
  # Child pipeline must be generated in a stage prior to the one where it runs
  stage: init
  script:
    - |
      set -euo pipefail
      ssh-add -L
      cd gitlab-ci/src/gen_gitlab_cargo_pipeline
      $SHELL_WRAPPER nix-shell --run "
        python gen_pipeline.py ../../../rs/ ../../../ic-os -v --out=../../../child-pipeline.yml
      " ../shell.nix
      cd -
      # slots: zh=48 (22%), sf=64 (29%), ch=108 (49%)
      # this tags are required on ci runners
      DCS=(
          "zh" "zh" "zh" "zh"
          "sf" "sf" "sf" "sf" "sf" "sf"
          "ch" "ch" "ch" "ch" "ch" "ch" "ch" "ch" "ch" "ch"
      )
      RANDOM=$$$(date +%s)
      DC="${DCS[$RANDOM % ${#DCS[@]} ]}"
      echo "DC_TAG=$DC" >> dc.env

      # CI env vars HYBRID_FACTOR_{ZH,SF,CH} with numeric value are expected
      # HYBRID_FACTOR_SF defines percentage of jobs that are extended from .ubuntu-nix-docker-k8s
      # that we distribute to k8s CI runners in SF DC, 0 means disabled, 100 means all the jobs
      VAR="HYBRID_FACTOR_${DC^^}"
      if [[ "${!VAR}" =~ ^[0-9]+$ ]]; then
        R="$(echo "$RANDOM" % 100 + 1 | bc)"
        if [ "$R" -le "${!VAR}" ]; then
          echo "MODE=k8s" >> dc.env
        else
          echo "MODE=docker" >> dc.env
        fi
      else
        echo "MODE=docker" >> dc.env
      fi
  artifacts:
    paths:
      - child-pipeline.yml
    reports:
      dotenv: dc.env

cargo-pipeline:
  extends: .cargo-rules-autorun-on-trigger
  stage: test
  needs:
    - job: gen-cargo-pipeline
    - job: docker-autobuild-protected
      optional: true
  variables:
    CI_PARENT_PIPELINE_SOURCE: "${CI_PIPELINE_SOURCE}"
    SELECTED_DC: "$DC_TAG"
    RUNNER_MODE: "$MODE"
  trigger:
    include:
      - artifact: child-pipeline.yml
        job: gen-cargo-pipeline
    strategy: depend
